{"version":3,"sources":["firebase/context.js","firebase/config.js","firebase/index.js","firebase/Firebase.js","util.js","App.styled.js","view/Visualizations/util.js","view/Visualizations/Visualizations.styled.js","view/Visualizations/index.js","view/Visualizations/Visualizations.js","App.js","serviceWorker.js","index.js"],"names":["FirebaseContext","React","createContext","useFirebase","useContext","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","signIn","username","password","auth","signInWithEmailAndPassword","signOut","firebase","initializeApp","this","isAuthenticated","localStorage","getItem","LoginContainer","styled","Form","MainContainer","div","getAllKeys","data","item","arr","filter","key","startsWith","push","slice","includes","formatKeys","keys","map","value","text","preProcess","d","divisor","reverse","metric","redKey","blueKey","i","length","fight","winner","Winner","red","blue","absDiff","Math","abs","diff","toFixed","wins","get","losses","total","winPct","getDiffMetrics","plotData","Object","k","x","Number","y","max","reduce","acc","cur","regData","result","regression","linear","r2","r","sqrt","toPrecision","linearFit","points","getTickFormat","tickFormat","t","Container","TitleContainer","RVal","CheckboxContainer","PlotContainer","SubPlot","Vis","useState","selected","setSelected","radio","setRadio","inputVal","setInputVal","threshold","radarD","names","name","rMapped","domains","edge","domain","radarData","fill","stroke","edgeData","DATA","Checkbox","label","checked","onChange","e","Dropdown","placeholder","selection","options","width","height","items","title","color","style","position","top","tickValues","v","on0","size","strokeWidth","Button","icon","onClick","prev","Input","disabled","polygons","strokeOpacity","fillOpacity","labels","textAnchor","axes","line","ticks","colorRange","hideInnerMostValues","renderAxesOverPolygons","primary","content","Main","setAuth","history","useHistory","clear","then","Login","error","setError","handleChange","console","log","type","authUser","setItem","uid","catch","errorObj","message","CustomRoute","children","conditionToView","redirect","rest","render","location","to","pathname","state","from","App","className","exact","path","Boolean","window","hostname","match","ReactDOM","Provider","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"y6g2lBACMA,EAAkBC,IAAMC,cAAc,MAE/BC,EAAc,kBAAMC,qBAAWJ,IAE7BA,I,2BCLFK,EAAS,CAClBC,OAAQ,0CACRC,WAAY,gCACZC,YAAa,uCACbC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,gBCLJC,ECCb,aAAe,IAAD,gCAMdC,OAAS,SAACC,EAAUC,GAAX,OAAwB,EAAKC,KAAKC,2BAA2BH,EAAW,qBAAsBC,IANzF,KAQdG,QAAU,kBAAM,EAAKF,KAAKE,WAPxBC,IAASC,cAAcjB,GAEvBkB,KAAKL,KAAOG,IAASH,Q,6ECPZM,G,OAAkB,mBAAQC,aAAaC,QAAQ,S,keCGrD,IAAMC,EAAiBC,YAAOC,IAAPD,CAAH,KAwBdE,EAAgBF,IAAOG,IAAV,K,6DCwHjB,SAASC,EAAWC,GACzB,IAAMC,EAAOD,EAAK,GACdE,EAAM,GACJC,EAAS,CAAC,UAChB,UACA,OACA,WACA,SACA,eACA,eACA,sBACA,qBACA,OACA,qBACA,SACA,sBACA,6BACA,oBACA,oBACA,2BACA,wBACA,4BACA,gBACA,oBACA,6BACA,aACA,OACA,aACA,SACA,aACA,SACA,UACA,eAGA,IAAI,IAAIC,KAAOH,EACTG,EAAIC,WAAW,QACdD,EAAIC,WAAW,MAChBH,EAAII,KAAKF,EAAIG,MAAM,IAEnBL,EAAII,KAAKF,IAKf,OAAOF,EAAIC,QAAO,SAAAF,GAAI,OAAKE,EAAOK,SAASP,MAGtC,SAASQ,EAAWC,GACzB,OAAOA,EAAKC,KAAI,SAAAP,GAAG,MAAK,CAAEA,MAAKQ,MAAOR,EAAKS,KAAMT,MAI5C,SAASU,EAAWd,EAAMI,GAC/B,IAAMW,EAnJD,SAAwBf,EAAMI,GAAoC,IAA/BY,EAA8B,uDAApB,EAAGC,EAAiB,wDAChEC,EAAS,GACTC,EAAS,KAAOf,EAChBgB,EAAU,KAAOhB,EACpBA,EAAII,SAAS,SACdQ,EAAU,KAGZ,IAAI,IAAIK,EAAI,EAAGA,EAAIrB,EAAKsB,OAAQD,IAAI,CAClC,IAAME,EAAQvB,EAAKqB,GAEbG,EAASD,EAAME,OACfC,EAAMH,EAAMJ,GAAUH,EACtBW,EAAOJ,EAAMH,GAAWJ,EACxBY,EAAUC,KAAKC,IAAIJ,EAAMC,GAE/B,GAAGC,EAAU,GAAKF,GAAOC,EAAK,CAC5B,IAAMI,EAAOH,EAAQI,QAAQ,GAC1BN,EAAMC,EACO,QAAXH,GACDN,EAAOa,GAAQ,CACbE,KAAMC,cAAIhB,EAAOa,GAAO,OAAQ,GAAK,EACrCI,OAAQD,cAAIhB,EAAOa,GAAO,SAAU,IAGvB,IAAZH,IACDV,GAAQa,GAAQ,CACdE,KAAMC,cAAIhB,GAAQa,GAAO,OAAQ,GACjCI,OAAQD,cAAIhB,GAAQa,GAAO,SAAU,GAAK,MAI9Cb,EAAOa,GAAQ,CACbE,KAAMC,cAAIhB,EAAOa,GAAO,OAAQ,GAChCI,OAAQD,cAAIhB,EAAOa,GAAO,SAAU,GAAK,GAG5B,IAAZH,IACDV,GAAQa,GAAQ,CACdE,KAAMC,cAAIhB,GAAQa,GAAO,OAAQ,GAAK,EACtCI,OAAQD,cAAIhB,GAAQa,GAAO,SAAU,MAIlCJ,EAAOD,IACF,SAAXF,GACDN,EAAOa,GAAQ,CACbE,KAAMC,cAAIhB,EAAOa,GAAO,OAAQ,GAAK,EACrCI,OAAQD,cAAIhB,EAAOa,GAAO,SAAU,IAGvB,IAAZH,IACDV,GAAQa,GAAQ,CACdE,KAAMC,cAAIhB,GAAQa,GAAO,OAAQ,GACjCI,OAAQD,cAAIhB,GAAQa,GAAO,SAAU,GAAK,MAI9Cb,EAAOa,GAAQ,CACbE,KAAMC,cAAIhB,EAAOa,GAAO,OAAQ,GAChCI,OAAQD,cAAIhB,EAAOa,GAAO,SAAU,GAAK,GAG5B,IAAZH,IACDV,GAAQa,GAAQ,CACdE,KAAMC,cAAIhB,GAAQa,GAAO,OAAQ,GAAK,EACtCI,OAAQD,cAAIhB,GAAQa,GAAO,SAAU,QASjD,IAAI,IAAI3B,KAAOc,EAAO,CACpB,IAAMe,EAAOf,EAAOd,GAAK6B,KAEnBG,EAAQH,EADCf,EAAOd,GAAK+B,OAIzBjB,EAAOd,GAAKiC,OADXpB,GACqB,IAAMgB,EAAOG,EAAQ,KAAKJ,QAAQ,IAElCC,EAAOG,EAAQ,KAAKJ,QAAQ,GAGpDd,EAAOd,GAAK2B,KAAO3B,EAGrB,OAAOc,EA0DGoB,CAAetC,EAAMI,GACzBmC,EAAWC,OAAO9B,KAAKK,GAAGJ,KAAI,SAAA8B,GAAC,MAAK,CAAEC,EAAGC,OAAOF,GAAIG,EAAGD,OAAO5B,EAAE0B,GAAGJ,QAASD,MAAOrB,EAAE0B,GAAGR,KAAOlB,EAAE0B,GAAGN,WAAWhC,QAAO,SAAAF,GAAI,OAAIA,EAAKmC,MAAQ,MAC3IS,EAAMN,EAASO,QAAO,SAACC,EAAIC,GAAL,OAAanB,KAAKgB,IAAIE,EAAKC,EAAIN,KAAI,GACzDO,EAAUV,EAAS5B,KAAI,SAAAV,GAAI,MAAI,CAAC0C,OAAO1C,EAAKyC,GAAIC,OAAO1C,EAAK2C,OAC5DM,EAASC,IAAWC,OAAOH,GAC3BI,EAAKH,EAAOG,GACZC,EAAIzB,KAAK0B,KAAKF,GAAIG,YAAY,GAIpC,MAAO,CAAEjB,WAAUM,MAAKY,UAHTP,EAAOQ,OACG/C,KAAI,SAACV,GAAD,MAAW,CAACyC,EAAGzC,EAAK,GAAI2C,EAAG3C,EAAK,OAE1BqD,IAAGD,MAwB1C,IAAMM,EAAgB,SAACtC,GACnB,IAAIuC,EAAa,KAMjB,OAJU,IAANvC,IACAuC,EAAa,SAACC,GAAD,OAAOA,EAAEL,YAAY,KAG/BI,G,43CChPJ,IAAME,EAAYnE,IAAOG,IAAV,KAQTiE,EAAiBpE,IAAOG,IAAV,KAoBdkE,EAAOrE,IAAOG,IAAV,KAQJmE,EAAoBtE,IAAOG,IAAV,KAMjBoE,EAAgBvE,IAAOG,IAAV,KAqBbqE,EAAUxE,IAAOG,IAAV,KC/DLsE,GCMQ,SAAC,GAAe,IAAdjF,EAAa,EAAbA,QAAa,EACFkF,mBAAS,OADP,mBAC3BC,EAD2B,KACjBC,EADiB,OAERF,mBAAS,WAFD,mBAE3BG,EAF2B,KAEpBC,EAFoB,OAGFJ,mBAAS,IAHP,mBAG3BK,EAH2B,KAGjBC,EAHiB,OAIU7D,EAAWd,EAAMsE,GAArD/B,EAJ0B,EAI1BA,SAAUM,EAJgB,EAIhBA,IAAKY,EAJW,EAIXA,UAAWH,EAJA,EAIAA,EAAGD,EAJH,EAIGA,GAE/B3C,EAAOX,EAAWC,GANU,EH8M7B,SAAiBA,GAKtB,IAL2C,IAAf4E,EAAc,uDAAF,EAClClE,EAAOX,EAAWC,GAClB6E,EAAS,GACTC,EAAQ,GAENzD,EAAI,EAAGA,EAAIX,EAAKY,OAAQD,IAAI,CAAC,IAC3BiC,EAAMxC,EAAWd,EAAMU,EAAKW,IAA5BiC,EACFyB,EAAOrE,EAAKW,GAGfiC,GAAKsB,IACNC,EAAOvE,KAAK,CAAEyE,OAAMzB,EAAGX,OAAOW,KAC9BwB,EAAMxE,KAAKyE,IAMf,MAAO,CAAEF,SAAQC,SGxNOE,CAAQhF,EAAM0E,GAA/BG,EAR2B,EAQ3BA,OAAQC,EARmB,EAQnBA,MACTG,EAAqBH,EHqOrBnE,KAAI,SAACuE,EAAM7D,GAAP,MAAc,CACpB0D,KAAMG,EACNC,OAAQ,CAAC,EAAG,GACZvB,WAAYD,EAActC,OGtOxB+D,EAAY,CAACP,EAAO/B,QAAO,SAACC,EAAKC,GAAN,sBAAmBD,EAAnB,eAAyBC,EAAI+B,KAAO/B,EAAIM,MAAO,CAAE+B,KAAM,UAAWC,OAAQ,aACrGC,EAAW,CAAC7E,EAAKoC,QAAO,SAACC,EAAKC,GAAN,sBAAmBD,EAAnB,eAAyBC,EAAM,MAAM,CAAEqC,KAAM,OAAQC,OAAQ,UAErFE,EAAI,UACHD,EACAH,GAIP,OACI,kBAACtB,EAAD,KACI,kBAACI,EAAD,KACI,kBAACC,EAAD,KACI,kBAACJ,EAAD,KACI,kBAACE,EAAD,KACI,kBAACwB,EAAA,EAAD,CACIjB,OAAK,EACLkB,MAAM,UACNX,KAAK,qBACLnE,MAAM,UACN+E,QAAmB,YAAVnB,EACToB,SAAU,SAACC,EAAD,OAAKjF,EAAL,EAAKA,MAAL,OAAgB6D,EAAS7D,MAEvC,kBAAC6E,EAAA,EAAD,CACIjB,OAAK,EACLkB,MAAM,MACNX,KAAK,qBACLnE,MAAM,MACN+E,QAAmB,QAAVnB,EACToB,SAAU,SAACC,EAAD,OAAKjF,EAAL,EAAKA,MAAL,OAAgB6D,EAAS7D,OAG3C,kBAACkF,EAAA,EAAD,CACIC,YAAY,kBACZC,WAAS,EACTC,QAASxF,EAAWC,GACpBE,MAAO0D,EACPsB,SAzCD,SAACC,EAAD,OAAKjF,EAAL,EAAKA,MAAL,OAAgB2D,EAAY3D,OA4CnC,kBAAC,IAAD,CAAQsF,MAAO,IAAKC,OAAQ,KACxB,kBAAC,IAAD,CAAqBC,MA/CrB,CAAC,CAACC,MAAO,OAAQC,MAAO,WAAY,CAACD,MAAO,aAAcC,MAAO,UA+CxBC,MAAO,CAACC,SAAU,WAAYC,IAAK,OAC5E,kBAACzC,EAAD,KACI,oCAAUV,GACV,qCAAWD,IAEf,kBAAC,IAAD,CAAOgD,MAAK,WAAM/B,EAAN,iBACZ,kBAAC,IAAD,CAAOoC,WAAY,CAAC,EAAG,GAAI,GAAI,GAAI,KAAM9C,WAAY,SAAA+C,GAAC,gBAAOA,EAAP,MAAaC,KAAG,EAACP,MAAM,mBACjE,YAAV7B,EAAsB,kBAAC,IAAD,CACpBxE,KAAMuC,EACNsE,KAAM,EACNP,MAAM,YACL,kBAAC,IAAD,CAAmBtG,KAAMuC,EAAU+D,MAAM,YAC9C,kBAAC,IAAD,CAAYtG,KAAMyD,EAAW6C,MAAM,QAAQQ,YAAa,MACxD,kBAAC,IAAD,CACIA,YAAa,EACb9G,KAAM,CAAC,CAAC0C,EAAE,EAAEE,EAAE,GAAG,CAACF,EAAE,EAAEE,EAAE,KAAM,CAACF,GAAIG,EAAKD,EAAE,GAAK,CAACF,EAAGG,EAAKD,EAAG,QAMvE,kBAACuB,EAAD,KACQ,mDACA,kBAACJ,EAAD,KACI,kBAACgD,EAAA,EAAD,CAAQC,KAAK,QAAQC,QAAS,kBAAMvC,EAAW,GAAKC,GAAY,SAAAuC,GAAI,OAAKvE,OAAOuE,GAAQ,IAAK1D,YAAY,SACzG,kBAAC2D,EAAA,EAAD,CAAOvG,MAAO8D,EAAU0C,UAAQ,IAChC,kBAACL,EAAA,EAAD,CAAQC,KAAK,OAAOC,QAAS,kBAAMvC,EAAW,GAAKC,GAAY,SAAAuC,GAAI,OAAKvE,OAAOuE,GAAQ,IAAK1D,YAAY,UAE5G,kBAAC,IAAD,CACIxD,KAAMwF,EACN5B,WAAY,SAAAC,GACZ,MAAO,IAEPoB,QAASA,EACTiB,MAAO,IACPC,OAAQ,IACRI,MAAO,CACPc,SAAU,CACNP,YAAa,EACbQ,cAAe,EACfC,YAAa,IAEjBC,OAAQ,CACJC,WAAY,UAEhBC,KAAM,CACFC,KAAM,CACNJ,YAAa,GACbT,YAAa,GACbQ,cAAe,IAEfM,MAAO,CACPL,YAAa,EACbD,cAAe,GAEfzG,KAAM,KAGVgH,WAAY,CAAC,eACbC,qBAAmB,EACnBC,wBAAwB,MAIxC,kBAAChB,EAAA,EAAD,CAAQiB,SAAO,EAACC,QAAQ,WAAWhB,QAAS9H,MClHlD+I,I,OAAO,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACR/I,EAAWlB,IACXkK,EAAUC,cAQhB,OACE,kBAACxI,EAAD,KACE,kBAAC,GAAD,CAAeV,QARH,WACdK,aAAa8I,QACbH,GAAQ,GACR/I,EAASD,UAAUoJ,MAAK,kBAAMH,EAAQ9H,KAAK,cAWzCkI,GAAQ,SAAC,GAAiB,IAAfL,EAAc,EAAdA,QAAc,EACG9D,mBAAS,CAAEtF,SAAU,GAAIC,SAAU,KADtC,mBACtB0F,EADsB,KACZC,EADY,OAEHN,mBAAS,MAFN,mBAEtBoE,EAFsB,KAEfC,EAFe,KAGvBtJ,EAAWlB,IACXkK,EAAUC,cAEVM,EAAe,SAACvI,GAAD,OAAS,SAACyF,EAAD,OAAKjF,EAAL,EAAKA,MAAL,OAAgB+D,GAAY,SAAAuC,GAAI,sBAASA,EAAT,eAAgB9G,EAAMQ,SAcpF,OAFAgI,QAAQC,IAAI,WAAYzJ,GAGtB,6BACE,kBAACM,EAAD,KACE,qCACA,4BAAK+I,GACL,kBAACtB,EAAA,EAAD,CAAO2B,KAAK,OAAOlI,MAAO8D,EAAS3F,SAAU6G,SAAU+C,EAAa,YAAajD,MAAM,aACvF,kBAACyB,EAAA,EAAD,CAAO2B,KAAK,WAAWlI,MAAO8D,EAAS1F,SAAU4G,SAAU+C,EAAa,YAAajD,MAAM,aAC3F,kBAACqB,EAAA,EAAD,CAAQiB,SAAO,EAACf,QAnBF,WAClB7H,EAASN,OAAO4F,EAAS3F,SAAU2F,EAAS1F,UAC3CuJ,MAAK,SAAAQ,GACJvJ,aAAawJ,QAAQ,MAAOD,EAASE,KACrCd,GAAQ,GACRC,EAAQ9H,KAAK,YAEd4I,OAAM,SAAAC,GAAQ,OAAIT,EAASS,EAASC,aAYKnB,QAAQ,UAwBtD,SAASoB,GAAT,GAAwE,IAAjDC,EAAgD,EAAhDA,SAAUC,EAAsC,EAAtCA,gBAAiBC,EAAqB,EAArBA,SAAaC,EAAQ,yDACrE,OACE,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,gBAAGC,EAAH,EAAGA,SAAH,OACNJ,EACED,EAEA,kBAAC,IAAD,CACEM,GAAI,CACFC,SAAUL,EACVM,MAAO,CAAEC,KAAMJ,UASdK,OAtCf,WAAgB,IAAD,EACW3F,mBAAS9E,KADpB,mBACNN,EADM,KACAkJ,EADA,KAGb,OACE,kBAAC,IAAD,KACE,yBAAK8B,UAAU,OACb,kBAACZ,GAAD,CAAaa,OAAK,EAACC,KAAK,IAAIZ,iBAAkBtK,EAAMuK,SAAS,SAC3D,kBAAC,GAAD,CAAOrB,QAASA,KAElB,kBAACkB,GAAD,CAAaa,OAAK,EAACC,KAAK,QAAQZ,gBAAiBtK,EAAMuK,SAAS,KAC9D,kBAAC,GAAD,CAAMrB,QAASA,QC3DLiC,QACW,cAA7BC,OAAOV,SAASW,UAEe,UAA7BD,OAAOV,SAASW,UAEhBD,OAAOV,SAASW,SAASC,MACvB,2DCXNC,IAASd,OAAO,kBAAC,EAAgBe,SAAjB,CAA0B7J,MAAO,IAAI/B,GAAY,kBAAC,GAAD,OAAoC6L,SAASC,eAAe,SD4HvH,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvC,MAAK,SAAAwC,GACjCA,EAAaC,kB","file":"static/js/main.2289474b.chunk.js","sourcesContent":["import React, { useContext} from 'react';\nconst FirebaseContext = React.createContext(null);\n\nexport const useFirebase = () => useContext(FirebaseContext);\n\nexport default FirebaseContext;","export const config = {\n    apiKey: \"AIzaSyCll3gZcx3i4el74s2NY9Q_kSFpWm6J0A4\",\n    authDomain: \"toor-capstone.firebaseapp.com\",\n    databaseURL: \"https://toor-capstone.firebaseio.com\",\n    projectId: \"toor-capstone\",\n    storageBucket: \"toor-capstone.appspot.com\",\n    messagingSenderId: \"404439880305\",\n    appId: \"1:404439880305:web:5e2dc5127657c09ee741d0\",\n    measurementId: \"G-WT3TX10VFZ\"\n  };","import FirebaseContext, { useFirebase } from './context';\nimport Firebase from './Firebase';\n\nexport default Firebase;\nexport { FirebaseContext, useFirebase };","import firebase from 'firebase';\nimport { config } from './config';\n\nclass Firebase {\n  constructor() {\n    firebase.initializeApp(config);\n\n    this.auth = firebase.auth();\n  }\n\n  signIn = (username, password) => this.auth.signInWithEmailAndPassword(username + '@toor-capstone.com', password);\n\n  signOut = () => this.auth.signOut();\n    \n}\nexport default Firebase;","export const isAuthenticated = () => !!localStorage.getItem('uid') ","import styled from 'styled-components';\nimport { Form } from 'semantic-ui-react';\n\nexport const LoginContainer = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 10em;\n\n  & > div {\n    margin-bottom: 1em;\n  }\n\n  & > button {\n    margin-left: 8em !important;\n  }\n\n  & > h3 {\n      margin-left: 6em;\n  }\n\n  & > h5 {\n    color: red;\n    margin: 0 0 1em 8em;\n  }\n`;\n\nexport const MainContainer = styled.div`\n  padding: 2em;\n`","import { get } from 'lodash';\nimport regression from 'regression';\n\nexport function getAgeMetrics(data){\n    const ageHash = {}\n  \n    for(let i = 0; i < data.length; i++){\n      const fight = data[i];\n      const winner = fight.Winner;\n      const redAge = fight.R_age || 'unknown';\n      const blueAge = fight.B_age || 'unknown';\n  \n  \n      if(winner === 'Red') {\n        ageHash[redAge] = {\n          wins: get(ageHash[redAge], 'wins', 0) + 1,\n          losses: get(ageHash[redAge], 'losses', 0),\n        }\n  \n        ageHash[blueAge] = {\n          wins: get(ageHash[blueAge], 'wins', 0),\n          losses: get(ageHash[blueAge], 'losses', 0) + 1,\n        }\n  \n      } else {\n        ageHash[blueAge] = {\n          wins: get(ageHash[blueAge], 'wins', 0) + 1,\n          losses: get(ageHash[blueAge], 'losses', 0),\n        }\n  \n        ageHash[redAge] = {\n          wins: get(ageHash[redAge], 'wins', 0),\n          losses: get(ageHash[redAge], 'losses', 0) + 1,\n        }\n  \n      }\n  \n    }\n  \n    for(let key in ageHash){\n      const wins = ageHash[key].wins;\n      const losses = ageHash[key].losses;\n      const total = wins + losses;\n      const winPct = (wins/total * 100).toFixed(2);\n  \n      ageHash[key] = {\n        ...ageHash[key],\n        winPct \n      }\n    }\n  \n    return ageHash;\n  }\n\n  export function getDiffMetrics(data, key, divisor = 1, reverse = false) {\n    const metric = {};\n    const redKey = 'R_' + key;\n    const blueKey = 'B_' + key;\n    if(key.includes('pct')){\n      divisor = .01;\n    }\n  \n    for(let i = 0; i < data.length; i++){\n      const fight = data[i];\n  \n      const winner = fight.Winner;\n      const red = fight[redKey] / divisor;\n      const blue = fight[blueKey] / divisor;\n      const absDiff = Math.abs(red - blue);\n  \n      if(absDiff > 0 && red && blue){\n        const diff = absDiff.toFixed(0);\n        if(red > blue){\n          if(winner === 'Red'){\n            metric[diff] = {\n              wins: get(metric[diff], 'wins', 0) + 1,\n              losses: get(metric[diff], 'losses', 0),\n            }\n\n            if(absDiff !== 0){\n              metric[-diff] = {\n                wins: get(metric[-diff], 'wins', 0),\n                losses: get(metric[-diff], 'losses', 0) + 1,\n              }\n            }\n          } else {\n            metric[diff] = {\n              wins: get(metric[diff], 'wins', 0),\n              losses: get(metric[diff], 'losses', 0) + 1,\n            }\n\n            if(absDiff !== 0){\n              metric[-diff] = {\n                wins: get(metric[-diff], 'wins', 0) + 1,\n                losses: get(metric[-diff], 'losses', 0),\n              }\n            }\n          }\n        } else if (blue > red){\n          if(winner === 'Blue'){\n            metric[diff] = {\n              wins: get(metric[diff], 'wins', 0) + 1,\n              losses: get(metric[diff], 'losses', 0),\n            }\n\n            if(absDiff !== 0){\n              metric[-diff] = {\n                wins: get(metric[-diff], 'wins', 0),\n                losses: get(metric[-diff], 'losses', 0) + 1,\n              }\n            }\n          } else {\n            metric[diff] = {\n              wins: get(metric[diff], 'wins', 0),\n              losses: get(metric[diff], 'losses', 0) + 1,\n            }\n\n            if(absDiff !== 0){\n              metric[-diff] = {\n                wins: get(metric[-diff], 'wins', 0) + 1,\n                losses: get(metric[-diff], 'losses', 0),\n              }\n            }\n          }\n        }\n      }\n  \n    }\n  \n    for(let key in metric){\n      const wins = metric[key].wins;\n      const losses = metric[key].losses;\n      const total = wins + losses;\n\n      if(reverse){\n        metric[key].winPct = (100 - wins / total * 100).toFixed(2);\n      } else {\n        metric[key].winPct = (wins / total * 100).toFixed(2);\n      }\n\n      metric[key].diff = key;\n    }\n  \n    return metric;\n  \n  }\n\n  export function getAllKeys(data){\n    const item = data[0];\n    let arr = [];\n    const filter = ['fighter', \n    'Referee', \n    'date', \n    'location', \n    'Winner', \n    'weight_class', \n    'no_of_rounds', \n    'current_lose_streak', \n    'current_win_streak', \n    'draw', \n    'longest_win_streak', \n    'losses', \n    'total_rounds_fought', \n    'total_time_fought(seconds)', \n    'total_title_bouts', \n    'total_title_bouts',\n    'win_by_Decision_Majority',\n    'win_by_Decision_Split',\n    'win_by_Decision_Unanimous',\n    'win_by_KO/TKO',\n    'win_by_Submission',\n    'win_by_TKO_Doctor_Stoppage', \n    'Weight_lbs', \n    'wins', \n    'title_bout',\n    'Stance',\n    'avg_opp_KD',\n    'avg_KD',\n    'avg_REV',\n    'avg_opp_REV',\n  ];\n  \n    for(let key in item){\n      if(!key.startsWith('R_')){\n        if(key.startsWith('B_')){\n          arr.push(key.slice(2));\n        } else {\n          arr.push(key)\n        }\n      }\n    }\n  \n    return arr.filter(item => !filter.includes(item));\n  }\n\n  export function formatKeys(keys){\n    return keys.map(key => ({ key, value: key, text: key }));\n  }\n\n\n  export function preProcess(data, key){\n    const d = getDiffMetrics(data, key);\n    const plotData = Object.keys(d).map(k => ({ x: Number(k), y: Number(d[k].winPct), total: d[k].wins + d[k].losses })).filter(item => item.total > 10);\n    const max = plotData.reduce((acc,cur) => Math.max(acc, cur.x), 0);\n    const regData = plotData.map(item => [Number(item.x), Number(item.y)]);\n    const result = regression.linear(regData);\n    const r2 = result.r2;\n    const r = Math.sqrt(r2).toPrecision(2);\n    const points = result.points;\n    const linearFit = points.map((item) => ({x: item[0], y: item[1]}));\n\n    return { plotData, max, linearFit, r, r2 };\n  }\n\n  export function rMapped(data, threshold = 0){\n    const keys = getAllKeys(data);\n    const radarD = [];\n    const names = [];\n\n    for(let i = 0; i < keys.length; i++){\n      const { r } = preProcess(data, keys[i]);\n      const name = keys[i];\n\n\n      if(r >= threshold){\n        radarD.push({ name, r: Number(r)});\n        names.push(name);\n      }\n\n\n    }\n\n    return { radarD, names };\n  }\n\nconst getTickFormat = (i) => {\n    let tickFormat = null;\n\n    if (i === 0){\n        tickFormat = (t) => t.toPrecision(1);\n    }\n\n    return tickFormat;\n};\n\nexport const getDomains = (edges) =>\n    edges.map((edge, i) => ({\n        name: edge,\n        domain: [0, 1],\n        tickFormat: getTickFormat(i)\n}));\n\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    height: 100vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n`\n\nexport const TitleContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 500px;\n    margin-bottom: 4em; \n    & > span {\n        font-size: 1.5em;\n        \n    }\n\n    & > .ui.disabled.input {\n        width: 5em;\n\n        & > input {\n            text-align: center;\n        }\n    }\n`;\n\nexport const RVal = styled.div`\n    display: flex;\n    flex-direction: column;\n    position: absolute;\n    top: 5em;\n    color: black;\n`;\n\nexport const CheckboxContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin-right: auto;\n`;\n\nexport const PlotContainer = styled.div`\n    display: flex;\n\n    & > div:first-child {\n        margin-right: 2em;\n    }\n\n    & > div:last-child {\n        margin-left: 2em;\n    }\n\n    & .rv-xy-plot__axis__line {\n        stroke-width: 1px !important;\n    }\n\n    & .rv-xy-plot__inner {\n        overflow: visible !important;\n    }\n\n`;\n\nexport const SubPlot = styled.div`\n    display: flex;\n    flex-direction: column;\n`\n","import Vis from './Visualizations';\n\nexport default Vis;","import React, { useState } from 'react';\nimport { XYPlot, LineSeries, XAxis, YAxis, MarkSeries, DiscreteColorLegend, VerticalBarSeries, RadarChart } from 'react-vis';\nimport {Button, Dropdown, Checkbox, Input} from 'semantic-ui-react';\nimport 'react-vis/dist/style.css';\nimport {getAllKeys, preProcess, formatKeys, getDomains, rMapped} from './util';\nimport { default as data } from '../../ufcdata/data.json';\nimport { Container, TitleContainer, RVal, CheckboxContainer, PlotContainer, SubPlot } from './Visualizations.styled';\n\nconst Visualizations = ({signOut}) => {\n    const [selected, setSelected] = useState('age');\n    const [radio, setRadio] = useState('scatter')\n    const [inputVal, setInputVal] = useState(0.4);\n    const { plotData, max, linearFit, r, r2 } = preProcess(data, selected);\n    const legendItems = [{title: 'data', color: '#79C7E3'}, {title: 'linear fit', color: 'black'}];\n    const keys = getAllKeys(data);\n    const handleDropdown = (e, {value}) => setSelected(value);\n    const {radarD, names} = rMapped(data, inputVal);\n    const domains = getDomains(names);\n\n    const radarData = [radarD.reduce((acc, cur) => ({...acc, [cur.name]: cur.r, }), { fill: '#79C7E3', stroke: '#2cbdf1'})];\n    const edgeData = [keys.reduce((acc, cur) => ({...acc, [cur]: 1 }), { fill: '#fff', stroke: '#ccc'})];\n\n    const DATA = [\n        ...edgeData,\n        ...radarData,\n      ];\n\n\n    return(\n        <Container>\n            <PlotContainer>\n                <SubPlot>\n                    <TitleContainer>\n                        <CheckboxContainer>\n                            <Checkbox\n                                radio\n                                label='Scatter'\n                                name='checkboxRadioGroup'\n                                value='scatter'\n                                checked={radio === 'scatter'}\n                                onChange={(e, {value}) => setRadio(value)}\n                            />\n                            <Checkbox\n                                radio\n                                label='Bar'\n                                name='checkboxRadioGroup'\n                                value='bar'\n                                checked={radio === 'bar'}\n                                onChange={(e, {value}) => setRadio(value)}\n                            />\n                        </CheckboxContainer>\n                        <Dropdown\n                            placeholder='Select Category'\n                            selection\n                            options={formatKeys(keys)}\n                            value={selected}\n                            onChange={handleDropdown}\n                        />\n                    </TitleContainer>\n                    <XYPlot width={500} height={500}>\n                        <DiscreteColorLegend items={legendItems} style={{position: 'absolute', top: '0'}} />\n                        <RVal>\n                            <span>R: {r}</span>\n                            <span>R2: {r2}</span>\n                        </RVal>\n                        <XAxis title={`+${selected} difference`}/>\n                        <YAxis tickValues={[0, 25, 50, 75, 100]} tickFormat={v => `${v}%`} on0 title=\"Win percentage\"/>\n                        { radio === 'scatter' ? <MarkSeries\n                            data={plotData}\n                            size={3}\n                            color=\"#79C7E3\"\n                        /> : <VerticalBarSeries data={plotData} color=\"#79C7E3\" />}\n                        <LineSeries data={linearFit} color=\"black\" strokeWidth={1.5} />\n                        <LineSeries\n                            strokeWidth={0}\n                            data={[{x:0,y:0},{x:0,y:100}, {x: -max, y:0 }, {x: max, y: 0}]}\n                        />\n\n                    </XYPlot>\n                </SubPlot>\n                \n                <SubPlot>\n                        <span>R Value Threshold</span>\n                        <TitleContainer>\n                            <Button icon=\"minus\" onClick={() => inputVal > 0 && setInputVal(prev => (Number(prev) - 0.1).toPrecision(1))} />\n                            <Input value={inputVal} disabled />\n                            <Button icon=\"plus\" onClick={() => inputVal < 1 && setInputVal(prev => (Number(prev) + 0.1).toPrecision(1))} />\n                        </TitleContainer>\n                        <RadarChart\n                            data={DATA}\n                            tickFormat={t => {\n                            return '';\n                            }}\n                            domains={domains}\n                            width={500}\n                            height={500}\n                            style={{\n                            polygons: {\n                                strokeWidth: 3,\n                                strokeOpacity: 1,\n                                fillOpacity: 0.8\n                            },\n                            labels: {\n                                textAnchor: 'middle'\n                            },\n                            axes: {\n                                line: {\n                                fillOpacity: 0.8,\n                                strokeWidth: 0.5,\n                                strokeOpacity: 0.8\n                                },\n                                ticks: {\n                                fillOpacity: 0,\n                                strokeOpacity: 0\n                                },\n                                text: {}\n                            }\n                            }}\n                            colorRange={['transparent']}\n                            hideInnerMostValues\n                            renderAxesOverPolygons={true}\n                        />\n                </SubPlot>\n            </PlotContainer>\n            <Button primary content=\"Sign out\" onClick={signOut} />\n        </Container>\n    )\n}\n\nexport default Visualizations;","import React, { useState} from 'react';\nimport { HashRouter as Router, Route, Link, useHistory, Redirect } from 'react-router-dom';\nimport { Form, Input, Button, Message } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css'\nimport { isAuthenticated } from './util';\nimport { LoginContainer, MainContainer } from './App.styled';\nimport { useFirebase } from './firebase';\nimport Visualzations from './view/Visualizations';\nimport './App.css';\n\nconst Main = ({ setAuth }) => {\n  const firebase = useFirebase();\n  const history = useHistory();\n\n  const signOut = () => {\n    localStorage.clear();\n    setAuth(false);\n    firebase.signOut().then(() => history.push('/'));\n  }\n\n  return (\n    <MainContainer>\n      <Visualzations signOut={signOut} />\n    </MainContainer>\n  )\n\n}\n\nconst Login = ({ setAuth }) => {\n  const [inputVal, setInputVal] = useState({ username: '', password: ''})\n  const [error, setError] = useState(null);\n  const firebase = useFirebase();\n  const history = useHistory();\n\n  const handleChange = (key) => (e, {value}) => setInputVal(prev => ({...prev, [key]: value }));\n\n  const loginAction = () => {\n    firebase.signIn(inputVal.username, inputVal.password)\n    .then(authUser => {\n      localStorage.setItem('uid', authUser.uid);\n      setAuth(true);\n      history.push('/main');\n    })\n    .catch(errorObj => setError(errorObj.message));\n  };\n\n  console.log('firebase', firebase);\n\n  return (\n    <div>\n      <LoginContainer>\n        <h3>Login</h3>\n        <h5>{error}</h5>\n        <Input type=\"text\" value={inputVal.username} onChange={handleChange('username')} label=\"username\" />\n        <Input type=\"password\" value={inputVal.password} onChange={handleChange('password')} label=\"password\" />\n        <Button primary onClick={loginAction} content=\"Go\" />\n      </LoginContainer>\n    </div>\n  )\n}\n\nfunction App() {\n  const [auth, setAuth] = useState(isAuthenticated());\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <CustomRoute exact path=\"/\" conditionToView={!auth} redirect='/main'>\n          <Login setAuth={setAuth}/>\n        </CustomRoute>\n        <CustomRoute exact path=\"/main\" conditionToView={auth} redirect='/'>\n          <Main setAuth={setAuth}/>\n        </CustomRoute>\n      </div>\n    </Router>\n    \n  );\n}\n\nfunction CustomRoute({ children, conditionToView, redirect, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        conditionToView ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: redirect,\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Firebase, { FirebaseContext } from './firebase';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<FirebaseContext.Provider value={new Firebase()}><App /></FirebaseContext.Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}